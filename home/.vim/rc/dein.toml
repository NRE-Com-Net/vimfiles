[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'haya14busa/dein-command.vim'
depends = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'thinca/vim-themis'

[[plugins]]
repo = 'scwood/vim-hybrid'
hook_add = '''
	syntax on
	set background=dark
	colorscheme hybrid
'''

[[plugins]]
repo = 'mhinz/vim-startify'
hook_add = 'source $RC_PATH/plugins/vim-startify.rc.vim'

[[plugins]]
repo = 'hecal3/vim-leader-guide'

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'tpope/vim-fugitive'
hook_add  = '''
	autocmd BufReadPost fugitive://* set bufhidden=delete
	autocmd BufReadPost fugitive://*
				\ if fugitive#buffer().type() =~# '^\%(tree\|blob\)$' |
				\   nnoremap <buffer> .. :edit %:h<CR> |
				\ endif
'''

[[plugins]]
repo = 'tpope/vim-git'

[[plugins]]
repo = 'tpope/vim-surround'
hook_add = '''
	nmap <silent>sa <Plug>(operator-surround-append)
	nmap <silent>sd <Plug>(operator-surround-delete)
	nmap <silent>sr <Plug>(operator-surround-replace)
'''

[[plugins]]
repo = 'tpope/vim-ragtag'

[[plugins]]
repo = 'tpope/vim-repeat'
mappings = '.'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'mbbill/undotree'
hook_add  = '''
	source $RC_PATH/plugins/undotree.rc.vim
	nnoremap <silent> <F5> :UndotreeToggle<CR>
	:imap <F5> <C-o>:UndotreeToggle<CR>
'''

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'godlygeek/tabular'

[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = '''
	let g:tagbar_singleclick = 1
	let g:tagbar_width = 50
	let g:tagbar_sort = 0
	let g:tagbar_compact = 1
	nnoremap <silent> <F3> :<C-u>TagbarToggle<CR>
	:imap <silent> <F3> <C-o>:<C-u>TagbarToggle<CR>
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = 'source $RC_PATH/plugins/vim-airline.rc.vim'

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
depends = 'vim-airline/vim-airline'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'ntpeters/vim-better-whitespace'
hook_add  = '''
	let g:better_whitespace_filetypes_blacklist = ['unite', 'qf', 'vimfiler', 'vimshell', 'help', 'vimfiler:explorer', 'startify', 'calendar']
'''

[[plugins]]
repo = 'gregsexton/MatchTag'

[[plugins]]
repo = 'vim-scripts/delimitMate.vim'

[[plugins]]
repo = 'xolox/vim-misc'

[[plugins]]
repo = 'xolox/vim-easytags'
depends = 'xolox/vim-misc'
hook_add  =  '''
	let g:easytags_dynamic_files = 1
	let g:easytags_resolve_links = 1
	let g:easytags_include_members = 1
	let g:easytags_autorecurse = 0
	let g:easytags_async = 1
	let g:easytags_auto_highlight = 0
	let g:easytags_updatetime_warn = 0

	function! UpdateProjectTags()
		let g:easytags_autorecurse = 1
		:UpdateTags
		let g:easytags_autorecurse = 0
	endfunction

	nnoremap <leader>ut :<C-u>call UpdateProjectTags()<CR>
'''

[[plugins]]
repo = 'honza/vim-snippets'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'pbrisbin/vim-mkdir'

[[plugins]]
repo = 'jmcantrell/vim-diffchanges'
hook_add  =  '''
	nnoremap <silent> <F12> :DiffChangesDiffToggle<CR>
	inoremap <silent> <F12> <C-o>:<C-u>DiffChangesDiffToggle<CR>
'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'zhaocai/DirDiff.vim'

[[plugins]]
repo = 'ap/vim-css-color'

[[plugins]]
repo = 'vim-scripts/bufkill.vim'

[[plugins]]
repo = 'mhinz/vim-signify'
hook_add  = '''
	let g:signify_vcs_list = [ 'svn', 'hg', 'bzr' ]
	let signify_update_on_focusgained = 1
	let g:signify_sign_add               = '+'
	let g:signify_sign_delete            = '_'
	let g:signify_sign_delete_first_line = 'â€¾'
	let g:signify_sign_change            = '~'
	let g:signify_sign_changedelete      = '~_'
'''

[[plugins]]
repo = 'int3/vim-extradite'
depends = 'tpope/vim-fugitive'
hook_source =  '''
	nnoremap <silent> <F6> :Extradite!<CR>
	:inoremap <F6> <C-o>:<C-u>Extradite!<CR>
'''

[[plugins]]
repo = 'airblade/vim-rooter'
hook_add  =  '''
	let g:rooter_silent_chdir = 1
	let g:rooter_change_directory_for_non_project_files = 'home'
'''

[[plugins]]
repo = 'jreybert/file-line'

[[plugins]]
repo = 'sheerun/vim-polyglot'

[[plugins]]
repo = 'vitalk/vim-shebang'

[[plugins]]
repo = 'vimwiki/vimwiki'
hook_add = '''
	nnoremap <silent> <F8> :<C-u>VimwikiIndex<CR>
	inoremap <silent> <C-F8> <C-o>:<C-u>VimwikiDiaryIndex<CR>
	nnoremap <silent><Leader>wf :<C-u>call vimwiki#base#follow_link('nosplit')<CR>
	nnoremap <silent><Leader>wv :<C-u>call vimwiki#base#follow_link('vsplit')<CR>
	nnoremap <silent><Leader>wb :<C-u>call vimwiki#base#go_back_link()<CR>

	let wiki_1 = {}
	let wiki_1.path = '~/.homesick/repos/vimwiki-privat/'
	let wiki_1.auto_toc = 1

	let wiki_2 = {}
	let wiki_2.path = '~/.homesick/repos/vimwiki-1and1/'
	let wiki_2.auto_toc = 1

	let g:vimwiki_nested_syntaxes = {'python': 'python', 'c++': 'cpp', 'bash': 'sh'}
	let g:vimwiki_list = [wiki_1, wiki_2]
'''
hook_source = '''
	autocmd BufReadPre *.wiki silent exec "!git pull -q" | redraw!
	autocmd BufWritePost *.wiki silent exec "!git add --all ;git commit -q -m 'Auto commit.';git push -q" | redraw!
'''

[[plugins]]
repo = 'mattn/calendar-vim'
hook_add = '''
	function! ToggleCalendar()
		execute ":Calendar"
		if exists("g:calendar_open")
			if g:calendar_open == 1
				execute "q"
				unlet g:calendar_open
			else
				g:calendar_open = 1
			end
		else
			let g:calendar_open = 1
		end
	endfunction
	:autocmd FileType vimwiki nnoremap <silent><Leader>wc :<C-u>call ToggleCalendar()<CR>
'''

[[plugins]]
repo = 'w0rp/ale'
if = 'g:has_async'
